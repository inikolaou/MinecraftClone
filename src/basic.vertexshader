#version 330 core

layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec3 tex_coords;
layout(location = 2) in vec3 vertexNormal_modelspace;
layout(location = 3) in float shading_value;

out vec3 local_position;
out vec3 interpolated_tex_coords;
out float interpolated_shading_value;
out vec3 vertex_position_worldspace;
out vec3 vertex_position_cameraspace;
out vec3 vertex_normal_cameraspace;
out vec4 vertex_position_lightspace;

uniform mat4 matrix;
uniform mat4 P;
uniform mat4 V;
uniform mat4 M;
uniform mat4 lightVP;

void main() {
	local_position = vertex_position;
	interpolated_tex_coords = tex_coords;
	interpolated_shading_value = shading_value;
	gl_Position = P * V * M * vec4(vertex_position, 1.0);

	vertex_position_worldspace = (M * vec4(vertex_position, 1)).xyz;
    vertex_position_cameraspace = (V * M * vec4(vertex_position, 1)).xyz;
    vertex_normal_cameraspace = (M * vec4(vertexNormal_modelspace, 0)).xyz;

	vertex_position_lightspace = lightVP * M * vec4(vertex_position, 1.0f);
}